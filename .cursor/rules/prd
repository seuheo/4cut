# KTX 네컷 앱 구현 현황 요약 (수정됨)

## 📱 프로젝트 개요

**프로젝트명**: KTX 네컷 앱  
**버전**: MVP v1.0  
**목표**: KTX를 자주 이용하는 20대 대학생 '김나영'처럼, 친구들과의 여행을 특별하게 기록하고 싶어 하는 사용자를 위해, 기차역에서의 순간을 트렌디한 4컷 사진으로 만들어 즉시 공유하는 모바일 앱

**현재 상태**: Android Studio Empty Activity 프로젝트만 생성된 상태에서 새로 시작

**[페르소나 반영]** 프로젝트의 목표를 '김나영' 페르소나에 맞춰 구체화했습니다. 타겟 사용자가 누구인지, 그들이 무엇을 원하는지를 명확히 하여 프로젝트의 방향성을 설정합니다.

---

## 🎯 핵심 가치 제안

- **즉시성**: 복잡한 과정 없이 바로 사진 촬영 및 결과 확인
- **재미**: KTX역 특색을 살린 특별한 사진 촬영 경험  
- **공유**: 소셜 미디어 친화적인 결과물 제공

---

## 👤 타겟 사용자

### 주요 페르소나: 김나영 (21세, 대학생)
- **사용 패턴**: 주말마다 KTX 이용, 인스타그램 스토리 공유 선호
- **핵심 니즈**: 친구들과의 여행 기념, 트렌디한 사진 촬영
- **불만사항**: 
  - "기차역에서 사진 찍을 만한 곳이 마땅치 않아"
  - "일반 카메라로 찍는 건 너무 평범해 보여"
  - "사진 찍고 꾸미려면 여러 앱을 거쳐야 해서 번거로워"

---

## 📋 PRD 요구사항 분석

### MVP 핵심 기능 (v1.0) - 페르소나 기반 핵심 기능

| 기능 ID | 기능명 | 상세 설명 | 구현 상태 |
|---------|--------|-----------|-----------|
| **F-01** | **4컷 사진 그리드 UI** | 인스타그램 스토리에 최적화된 2x2 세로 레이아웃 | 🔴 **0% 완료** |
| **F-02** | **KTX 티켓 시그니처 프레임** | KTX 티켓을 모티브로 한 트렌디한 프레임 1종 | 🔴 **0% 완료** |
| **F-03** | **이미지 합성 및 저장** | 4컷 이미지 하나로 합성 및 JPEG 형식으로 저장 | 🔴 **0% 완료** |
| **F-04** | **인스타그램 스토리 공유** | 인스타그램 스토리로 바로 공유하는 기능 | 🔴 **0% 완료** |
| **F-05** | **권한 및 에러 처리** | 필수 권한(저장소) 요청 및 기본 에러 처리 | 🔴 **0% 완료** |

**[페르소나 반영]** '김나영'이 가장 매력적으로 느낄 핵심 기능에 집중했습니다. '평범함'을 피하기 위한 시그니처 프레임과 '번거로움'을 해결할 인스타그램 직접 공유 기능을 MVP의 핵심으로 설정합니다.

---

## 🏗️ 현재 구현 상태 (수정됨)

### ✅ **완료된 부분**

#### 1. **프로젝트 기본 구조**
- **Android Studio 프로젝트**: 기본 Empty Activity 프로젝트 생성
- **Gradle 설정**: 기본 빌드 설정 완료
- **패키지 구조**: com.example.a4cut 기본 설정

### ❌ **미완성 부분 (전체 새로 구현 필요)**

#### 1. **UI/UX 기반 구조**
- **Material 3 디자인**: 적용 필요
- **Jetpack Compose**: 설정 및 구현 필요
- **기본 레이아웃**: 메인 화면 구조 필요

#### 2. **4컷 사진 그리드 UI**
- **PhotoGrid**: 인스타그램 스토리에 최적화된 2x2 세로 레이아웃 구현 필요
- **기본 UI 컴포넌트**: 저장 버튼, 공유 버튼 등 기본 요소 필요

#### 3. **기술적 기반**
- **MVVM 아키텍처**: ViewModel + Repository 패턴 구현 필요
- **기본 상태 관리**: Compose State 설정 필요
- **의존성 설정**: Jetpack Compose 등 필요한 라이브러리 추가 필요

### ❌ **미완성 부분**

#### 1. **KTX 티켓 시그니처 프레임**
- KTX 티켓을 모티브로 한 트렌디한 프레임 1종
- Canvas를 사용한 감성적인 프레임 디자인

#### 2. **UI 컴포넌트 (페르소나 기반)**
- 저장 버튼 (갤러리 저장 기능)
- 인스타그램 스토리 공유 버튼 (직접 공유 기능)
- 4컷 그리드 레이아웃 (인스타그램 최적화)

#### 3. **기본 기능 (페르소나 기반)**
- MediaStore API 연동 (갤러리 저장)
- 인스타그램 스토리 직접 공유 기능
- 기본적인 에러 처리 (토스트 메시지)
- 파일 저장 성공/실패 피드백

---

## 🚀 향후 구현 계획 (수정됨)

### **Phase 1: 기본 프로젝트 구조 구축 (1-2일)**

#### 1. **Jetpack Compose 설정**
```kotlin
// Jetpack Compose 의존성 추가
implementation platform("androidx.compose:compose-bom:2024.02.00")
implementation "androidx.compose.ui:ui"
implementation "androidx.compose.material3:material3"
implementation "androidx.compose.ui:ui-tooling-preview"
```

#### 2. **MVVM 아키텍처 구축**
- 기본 ViewModel 구조
- Repository 패턴 기본 설정
- Compose State 관리 설정

#### 3. **기본 UI 구조**
- MainActivity를 Compose로 변경
- 기본 테마 및 색상 설정
- 메인 화면 레이아웃 구조

### **Phase 2: 4컷 사진 UI 틀 제작 (2-3일)**

#### 1. **4컷 사진 그리드**
- 인스타그램 스토리에 최적화된 2x2 세로 레이아웃 (Compose)
- 기본 이미지 플레이스홀더 (색상 블록)
- 그리드 레이아웃 및 스타일링

#### 2. **KTX 티켓 시그니처 프레임**
- KTX 티켓을 모티브로 한 트렌디한 프레임 1종
- Canvas를 사용한 감성적인 프레임 디자인
- 인스타그램 스토리에 최적화된 프레임 적용

#### 3. **기본 UI 컴포넌트**
- 저장 버튼, 인스타그램 스토리 공유 버튼
- 기본 애니메이션 및 전환 효과
- Material Design 3 컴포넌트 적용

### **Phase 3: 기본 기능 구현 (2-3일)**

#### 1. **저장 기능 (페르소나 기반)**
```kotlin
// MediaStore API 연동 (페르소나 기반)
private fun saveImageToGallery(bitmap: Bitmap, fileName: String) {
    val contentValues = ContentValues().apply {
        put(MediaStore.Images.Media.DISPLAY_NAME, fileName)
        put(MediaStore.Images.Media.MIME_TYPE, "image/jpeg")
        put(MediaStore.Images.Media.RELATIVE_PATH, Environment.DIRECTORY_PICTURES)
    }
    // 기본 저장 로직 구현
}
```

#### 2. **인스타그램 스토리 공유 기능 (페르소나 기반)**
```kotlin
// 인스타그램 스토리 직접 공유 기능
private fun shareToInstagramStory(uri: Uri) {
    val intent = Intent("com.instagram.share.ADD_TO_STORY").apply {
        setDataAndType(uri, "image/jpeg")
        flags = Intent.FLAG_GRANT_READ_URI_PERMISSION
    }
    if (intent.resolveActivity(packageManager) != null) {
        startActivity(intent)
    } else {
        // 인스타그램이 설치되지 않은 경우 일반 공유
        shareImage(uri)
    }
}
```

#### 3. **기본 에러 처리**
- 파일 저장 실패 시 토스트 메시지
- 기본적인 예외 상황 처리
- 사용자 친화적인 에러 메시지

### **Phase 4: 최적화 및 테스트 (1-2일)**

#### 1. **기본 최적화**
- 메모리 사용량 최적화 (기본적인 수준)
- UI 반응성 개선
- 기본적인 성능 모니터링

#### 2. **기본 테스트**
- 에뮬레이터에서의 기본 동작 확인
- UI 요소 정상 표시 확인
- 기본 기능 동작 확인
- 에러 상황 처리 확인

---

## 📊 기술 스택 현황 (수정됨)

### **현재 사용 중**
- **언어**: Kotlin
- **기본 구조**: Android Studio Empty Activity 프로젝트

### **추가 필요**
- **UI**: Jetpack Compose + Material 3
- **아키텍처**: MVVM + Repository
- **비동기**: Coroutines
- **이미지**: Coil, Canvas, Bitmap
- **저장**: MediaStore API
- **권한 관리**: 기본 권한 처리

---

## 🎯 성공 지표

### **기능적 지표**
- 4컷 촬영 완료율: 95% 이상
- 이미지 합성 속도: 3초 이내
- 저장 성공률: 99% 이상

### **사용자 경험 지표**
- 첫 사용자 완성율: 80% 이상
- 재사용률: 60% 이상
- 사용자 만족도: 4.5/5.0 이상

---

## ⚠️ 주요 리스크 및 대응 방안 (techContext.md와 동기화)

### **기술적 리스크 (techContext.md와 동기화)**
1. **카메라 호환성**: 다양한 기기에서의 안정성
   - **대응**: CameraX 사용으로 호환성 향상 (Android 5.0+ 지원)
   
2. **성능 이슈**: 3초 이내 이미지 합성 보장
   - **대응**: 백그라운드 처리 및 최적화 (techContext.md 성능 요구사항)

3. **메모리 관리**: 대용량 이미지 처리 시 메모리 누수
   - **대응**: WeakReference 및 Bitmap 재사용 (최대 512MB 제약 준수)

4. **저장 공간**: 이미지 저장을 위한 여유 공간 부족
   - **대응**: 최소 100MB 여유 공간 확인 및 사용자 안내

### **일정 리스크**
1. **기능 크리프**: MVP 범위 확장 방지
   - **대응**: 명확한 우선순위 설정
   
2. **테스트 시간 부족**: 충분한 품질 보증 시간 확보
   - **대응**: 단계별 테스트 계획 수립

---

## 📅 마일스톤 및 일정 (수정됨)

### **Week 1: 기본 구조 구축**
- [ ] Jetpack Compose 프로젝트 설정
- [ ] MVVM 아키텍처 구축
- [ ] 4컷 사진 그리드 UI 기본 구조 (인스타그램 최적화)

### **Week 2: 핵심 기능 구현**
- [ ] KTX 티켓 프레임 디자인 및 적용
- [ ] 이미지 합성 및 저장 기능 구현
- [ ] 인스타그램 스토리 공유 기능 구현

### **Week 3: 최적화 및 테스트**
- [ ] 권한 처리 및 에러 핸들링
- [ ] UI/UX 최종 다듬기
- [ ] MVP v1.0 완성 및 배포 준비

---

## 🔄 다음 액션 아이템 (수정됨)

### **즉시 실행 (오늘)**
1. [ ] Jetpack Compose 의존성 추가
2. [ ] 기본 MVVM 아키텍처 구조 설계
3. [ ] MainActivity를 Compose로 변경

### **이번 주 내**
1. [ ] 4컷 사진 그리드 UI 구현 (인스타그램 최적화)
2. [ ] KTX 티켓 시그니처 프레임 구현
3. [ ] 저장/인스타그램 공유 버튼 UI 구현

### **다음 주**
1. [ ] 저장/인스타그램 공유 기능 연동
2. [ ] 기본 에러 처리 (토스트 메시지)
3. [ ] 에뮬레이터 테스트 및 최적화

---

## 📝 결론 (페르소나 기반 핵심 기능)

현재 KTX 네컷 앱은 **Android Studio Empty Activity 프로젝트만 생성**된 상태에서 새로 시작해야 합니다. 

**Jetpack Compose와 MVVM 아키텍처를 기반**으로 **인스타그램 스토리에 최적화된 2x2 세로 레이아웃과 KTX 티켓 시그니처 프레임**을 구현하여 **페르소나 기반의 MVP v1.0을 완성**하는 것이 목표입니다.

**카메라 기능과 복잡한 이미지 처리는 제외**하고 **저장 버튼과 인스타그램 스토리 공유 버튼이 있는 트렌디한 UI 틀**을 우선 구현하며, **에뮬레이터 테스트를 통한 기본 동작 확인**을 진행할 예정입니다.

**MVP v1.0 완성까지 약 2-3주**의 개발 기간이 필요하며, **'김나영' 페르소나의 핵심 니즈를 충족하는 기능**으로 기본 동작을 확인한 후 **추후 고급 기능을 추가**할 계획입니다.

---

*문서 작성일: 2025년 1월 16일*  
*문서 버전: 4.0*  
*작성자: AI Assistant*  
*수정 사항: 페르소나 기반 핵심 기능, 인스타그램 최적화, KTX 티켓 프레임*
